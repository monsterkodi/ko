###
00     00  00000000  000   000  000   000
000   000  000       0000  000  000   000
000000000  0000000   000 0 000  000   000
000 0 000  000       000  0000  000   000
000   000  00000000  000   000   0000000
###

use ../../kxk   ▪ slash
use ../editor   ◆ Editor
use ../commands ◆ Macro

getMenu = (template, name) ->

    for item in template
        if item.text == name
            return item

Menu = (template) ->

    if template is arr
        template = clone template
    else
        log 'no array?' typeof(template), template
        template = []

    submenu = Misc: []

    EditMenu = []

    for modName, actions of Editor.actionModules
        # log modName, actions
        for key,value of actions
            menuName = 'Misc'
            if key == 'actions'
                if value['menu']?
                    menuName = value['menu']
                    submenu[menuName] ?= []
                for k,v of value
                    if v.name and v.combo
                        item =
                            text:   v.name
                            combo:  v.combo
                        if v.menu?
                            submenu[v.menu] ?= []
                        if v.separator
                            submenu[v.menu ? menuName].push text: ''
                        submenu[v.menu ? menuName].push item

    for key, menu of submenu
        EditMenu.push text:key, menu:menu

    editMenu = getMenu template, 'Edit'
    editMenu.menu = editMenu.menu.concat EditMenu

    MacroMenu = [ text:'Macro' combo:'command+m' command:'macro' ]
    for macro in Macro.macroNames
        MacroMenu.push
            text:   macro

    commandMenu = getMenu template, 'Command'
    commandMenu.menu = commandMenu.menu.concat text:'Macro' menu:MacroMenu

    transform = Editor.actionModules.transform
    if transform?.Transform?
        TransformMenu = []
        for transformMenu, transformList of transform.Transform.transformMenus
            transformSubmenu = []
            for transformText in transformList
                transformSubmenu.push
                    text:   transformText
                    action: 'doTransform'
    
            TransformMenu.push
                text: transformMenu
                menu: transformSubmenu
    
        editMenu.menu = editMenu.menu.concat text:'Transform' menu:TransformMenu
    
    template

export Menu
