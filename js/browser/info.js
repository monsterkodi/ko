// koffee 1.19.0

/*
000  000   000  00000000   0000000     
000  0000  000  000       000   000    
000  000 0 000  000000    000   000    
000  000  0000  000       000   000    
000  000   000  000        0000000
 */
var $, File, elem, fileInfo, imageInfo, moment, open, pbytes, ref, slash;

ref = require('kxk'), $ = ref.$, elem = ref.elem, open = ref.open, slash = ref.slash;

File = require('../tools/file');

pbytes = require('pretty-bytes');

moment = require('moment');

imageInfo = function(file) {
    var cnt, img;
    img = elem('img', {
        "class": 'browserImage',
        src: slash.fileUrl(file)
    });
    cnt = elem({
        "class": 'browserImageContainer',
        child: img
    });
    cnt.addEventListener('dblclick', function() {
        return open(file);
    });
    img.onload = function() {
        var age, br, height, html, info, num, range, ref1, size, stat, width, x;
        img = $('.browserImage');
        br = img.getBoundingClientRect();
        x = img.clientX;
        width = parseInt(br.right - br.left - 2);
        height = parseInt(br.bottom - br.top - 2);
        img.style.opacity = '1';
        img.style.maxWidth = '100%';
        stat = slash.fileExists(file);
        size = pbytes(stat.size).split(' ');
        age = moment().to(moment(stat.mtime), true);
        ref1 = age.split(' '), num = ref1[0], range = ref1[1];
        if (num[0] === 'a') {
            num = '1';
        }
        html = "<tr><th colspan=2>" + width + "<span class='punct'>x</span>" + height + "</th></tr>";
        html += "<tr><th>" + size[0] + "</th><td>" + size[1] + "</td></tr>";
        html += "<tr><th>" + num + "</th><td>" + range + "</td></tr>";
        info = elem({
            "class": 'browserFileInfo',
            children: [
                elem('div', {
                    "class": "fileInfoFile " + (slash.ext(file)),
                    html: File.span(file)
                }), elem('table', {
                    "class": "fileInfoData",
                    html: html
                })
            ]
        });
        cnt = $('.browserImageContainer');
        return cnt.appendChild(info);
    };
    return cnt;
};

fileInfo = function(file) {
    var age, info, num, range, ref1, size, stat, t;
    stat = slash.fileExists(file);
    size = pbytes(stat.size).split(' ');
    t = moment(stat.mtime);
    age = moment().to(t, true);
    ref1 = age.split(' '), num = ref1[0], range = ref1[1];
    if (num[0] === 'a') {
        num = '1';
    }
    if (range === 'few') {
        num = moment().diff(t, 'seconds');
        range = 'seconds';
    }
    info = elem({
        "class": 'browserFileInfo',
        children: [
            elem('div', {
                "class": "fileInfoIcon " + (slash.ext(file)) + " " + (File.iconClassName(file))
            }), elem('div', {
                "class": "fileInfoFile " + (slash.ext(file)),
                html: File.span(file)
            }), elem('table', {
                "class": "fileInfoData",
                html: "<tr><th>" + size[0] + "</th><td>" + size[1] + "</td></tr><tr><th>" + num + "</th><td>" + range + "</td></tr>"
            })
        ]
    });
    return info;
};

module.exports = {
    file: fileInfo,
    image: imageInfo
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../../coffee/browser/info.coffee