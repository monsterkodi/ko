// koffee 1.16.0

/*
 0000000   0000000  00000000    0000000   000      000      0000000     0000000   00000000
000       000       000   000  000   000  000      000      000   000  000   000  000   000
0000000   000       0000000    000   000  000      000      0000000    000000000  0000000
     000  000       000   000  000   000  000      000      000   000  000   000  000   000
0000000    0000000  000   000   0000000   0000000  0000000  0000000    000   000  000   000
 */
var Scrollbar, clamp, drag, elem, ref, scheme, stopEvent,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), clamp = ref.clamp, drag = ref.drag, elem = ref.elem, scheme = ref.scheme, stopEvent = ref.stopEvent;

scheme = require('../tools/scheme');

Scrollbar = (function() {
    function Scrollbar(editor) {
        this.editor = editor;
        this.update = bind(this.update, this);
        this.wheelScroll = bind(this.wheelScroll, this);
        this.onWheel = bind(this.onWheel, this);
        this.onDrag = bind(this.onDrag, this);
        this.onStart = bind(this.onStart, this);
        this.editor.scroll.on('scroll', this.update);
        this.editor.on('linesShown', this.update);
        this.editor.on('viewHeight', this.update);
        this.elem = elem({
            "class": 'scrollbar left'
        });
        this.editor.view.appendChild(this.elem);
        this.handle = elem({
            "class": 'scrollhandle left'
        });
        this.elem.appendChild(this.handle);
        this.scrollX = 0;
        this.scrollY = 0;
        this.scrollDelta = 0;
        this.drag = new drag({
            target: this.elem,
            onStart: this.onStart,
            onMove: this.onDrag,
            cursor: 'ns-resize'
        });
        this.elem.addEventListener('wheel', this.onWheel);
        this.editor.view.addEventListener('wheel', this.onWheel);
    }

    Scrollbar.prototype.del = function() {
        this.elem.removeEventListener('wheel', this.onWheel);
        return this.editor.view.removeEventListener('wheel', this.onWheel);
    };

    Scrollbar.prototype.onStart = function(drag, event) {
        var br, ln, ly, sy;
        br = this.elem.getBoundingClientRect();
        sy = clamp(0, this.editor.scroll.viewHeight, event.clientY - br.top);
        ln = parseInt(this.editor.scroll.numLines * sy / this.editor.scroll.viewHeight);
        ly = (ln - this.editor.scroll.viewLines / 2) * this.editor.scroll.lineHeight;
        return this.editor.scroll.to(ly);
    };

    Scrollbar.prototype.onDrag = function(drag) {
        var scroll;
        this.scrollDelta += (drag.delta.y / (this.editor.scroll.viewLines * this.editor.scroll.lineHeight)) * this.editor.scroll.fullHeight;
        scroll = (function(_this) {
            return function() {
                _this.editor.scroll.by(_this.scrollDelta);
                return _this.scrollDelta = 0;
            };
        })(this);
        clearImmediate(this.scrollTimer);
        return this.scrollTimer = setImmediate(scroll);
    };

    Scrollbar.prototype.onWheel = function(event) {
        var scrollFactor;
        scrollFactor = function() {
            var f;
            f = 1;
            f *= 1 + 1 * event.shiftKey;
            f *= 1 + 3 * event.metaKey;
            return f *= 1 + 7 * event.altKey;
        };
        if (Math.abs(event.deltaX) >= 2 * Math.abs(event.deltaY) || Math.abs(event.deltaY) === 0) {
            this.scrollX += event.deltaX;
        } else {
            this.scrollY += event.deltaY * scrollFactor();
        }
        if (this.scrollX || this.scrollY) {
            window.requestAnimationFrame(this.wheelScroll);
        }
        return stopEvent(event);
    };

    Scrollbar.prototype.wheelScroll = function() {
        this.editor.scroll.by(this.scrollY, this.scrollX);
        return this.scrollX = this.scrollY = 0;
    };

    Scrollbar.prototype.update = function() {
        var bh, cf, cs, longColor, scrollHeight, scrollTop, shortColor, vh;
        if (this.editor.numLines() * this.editor.size.lineHeight < this.editor.viewHeight()) {
            this.handle.style.top = "0";
            this.handle.style.height = "0";
            return this.handle.style.width = "0";
        } else {
            bh = this.editor.numLines() * this.editor.size.lineHeight;
            vh = Math.min(this.editor.scroll.viewLines * this.editor.scroll.lineHeight, this.editor.viewHeight());
            scrollTop = parseInt((this.editor.scroll.scroll / bh) * vh);
            scrollHeight = parseInt(((this.editor.scroll.viewLines * this.editor.scroll.lineHeight) / bh) * vh);
            scrollHeight = Math.max(scrollHeight, parseInt(this.editor.size.lineHeight / 4));
            scrollTop = Math.min(scrollTop, this.editor.viewHeight() - scrollHeight);
            scrollTop = Math.max(0, scrollTop);
            this.handle.style.top = scrollTop + "px";
            this.handle.style.height = scrollHeight + "px";
            this.handle.style.width = "2px";
            cf = 1 - clamp(0, 1, (scrollHeight - 10) / 200);
            longColor = scheme.colorForClass('scrollbar long');
            shortColor = scheme.colorForClass('scrollbar short');
            cs = scheme.fadeColor(longColor, shortColor, cf);
            return this.handle.style.backgroundColor = cs;
        }
    };

    return Scrollbar;

})();

module.exports = Scrollbar;

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../../coffee/editor/scrollbar.coffee